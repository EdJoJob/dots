# vim: fdm=marker
PROFILE_STARTUP=false
if [[ "$PROFILE_STARTUP" == true ]]; then
    # http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html
    PS4=$'%D{%M%S%.} %N:%i> '
    exec 3>&2 2>$HOME/tmp/startlog.$$
    setopt xtrace prompt_subst
fi
fpath=($HOME/.zfunc $fpath)
# zenv ---------------------------------{{{
DISABLE_AUTO_UPDATE='true'
source ~/.zinit/bin/zinit.zsh
zinit snippet OMZL::cli.zsh
zinit snippet OMZL::clipboard.zsh
zinit snippet OMZL::compfix.zsh
zinit snippet OMZL::completion.zsh
zinit snippet OMZL::correction.zsh
zinit snippet OMZL::diagnostics.zsh
zinit snippet OMZL::directories.zsh
zinit snippet OMZL::functions.zsh
zinit snippet OMZL::grep.zsh
zinit snippet OMZL::history.zsh
zinit snippet OMZL::key-bindings.zsh
zinit snippet OMZL::misc.zsh
zinit snippet OMZL::nvm.zsh
zinit snippet OMZL::prompt_info_functions.zsh
zinit snippet OMZL::spectrum.zsh
zinit snippet OMZL::termsupport.zsh
zinit snippet OMZL::theme-and-appearance.zsh
zinit load zsh-git-prompt/zsh-git-prompt
zinit load zsh-users/zsh-completions
zinit load srijanshetty/zsh-pandoc-completion
zinit load zsh-users/zsh-syntax-highlighting

fpath=( ~/dots/zsh/func "${fpath[@]}" )

for f in ~/dots/zsh/func/*(*); do
    autoload -Uz $f
done

ZGEN_RESET_ON_CHANGE=(${HOME}/dots/zsh/zshrc.symlink ${HOME}/.zshrc)
export ZGEN_RESET_ON_CHANGE
#}}}
# Common Directories -------------------{{{
dots=~/dots
: ~dots

itermscripts=~/Library/Application\ Support/iTerm2/Scripts
: ~itermscripts

wiki=~/wiki
: wiki

if whence keybase &>/dev/null; then
    if [[ $(uname) == 'Darwin' ]]; then
        keybase=/Volumes/Keybase/private/edjojob
        keybasepub=/Volumes/Keybase/public/edjojob
    elif [[ $(uname) == 'Linux' ]]; then
        keybase=/keybase/private/edjojob
        keybasepub=/keybase/public/edjojob
    fi
    : ~keybase
    : ~keybasepub
fi
#}}}
# Plugins Settings ---------------------{{{
# zsh-syntax-highlighting {{{
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern)
export ZSH_HIGHLIGHT_HIGHLIGHTERS
typeset -A ZSH_HIGHLIGHT_STYLES
# }}}
# todo.sh {{{
export TODO_ROOT="$HOME/.todo"
export TODO_DIR="$TODO_ROOT/todo"

# Your todo/done/report.txt locations
export TODO_FILE="$TODO_DIR/todo.txt"
export DONE_FILE="$TODO_DIR/done.txt"
export REPORT_FILE="$TODO_DIR/report.txt"

# You can customize your actions directory location
#export TODO_ACTIONS_DIR="$HOME/.todo.actions.d"
export TODO_ACTIONS_DIR="$TODO_ROOT/actions"

export TODO_NOTES_DIR="$TODO_ROOT/notes"
#}}}
#  zsh-git-prompt {{{
export ZSH_GIT_PROMPT_SHOW_UPSTREAM=2
#}}}
#}}}
# zsh core settings --------------------{{{
# editor {{{
# bind UP and DOWN arrow keys
zmodload zsh/terminfo
bindkey "$terminfo[kcuu1]" fzf-history-widget
bindkey "$terminfo[kcud1]" fzf-history-widget
bindkey -M vicmd 'k' fzf-history-widget
bindkey -M vicmd 'j' fzf-history-widget
autoload edit-command-line; zle -N edit-command-line
bindkey -M vicmd v edit-command-line
bindkey -M vicmd q push-line
#}}}

autoload -Uz compinit promptinit
compinit

# history {{{
setopt append_history
setopt extended_history # have timestamps
setopt hist_expire_dups_first
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt hist_verify
setopt inc_append_history
setopt interactive_comments
unsetopt share_history
# }}}

setopt extendedglob
#}}}
# PATH ---------------------------------{{{
export XDG_CONFIG_HOME=$HOME/.config
#}}}
# Default Path -------------------------{{{
path=(
    /usr/local/bin
    /usr/local/sbin
    /usr/bin
    /bin
    /usr/sbin
    /sbin
    ${HOME}/.fzf/bin
    ${HOME}/.local/bin
    ${HOME}/.bin
)
typeset -U path
export path
# }}}
# Colors -------------------------------{{{
if whence gdircolors &>/dev/null; then
    eval $(gdircolors ~/.dir_colors)
else
    eval $(dircolors ~/.dir_colors)
fi
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"

# Use gnu's ls so don't need these lscolors
if [[ $(uname) == 'Darwin' && -n $LSCOLORS ]]; then
  unset LSCOLORS
fi

#}}}
# Other files --------------------------{{{
[ -f ~/.local_zshrc ] && source ~/.local_zshrc
source $dots/zsh/zsh_theme
source ~/.aliases.zsh
source $dots/zsh/fzf.zsh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh && bindkey -r '^T' && bindkey '^P' fzf-file-widget
#}}}

# Default programs ---------------------{{{
export LESS="-FXRM"
export SHELL=$(whence zsh)
export EDITOR=$(whence nvim || whence vim)
#}}}

# Tmux detection -----------------------{{{
if [ -z $TMUX ]; then
    test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
else
    fixssh
fi
#}}}
# SSH Detection ------------------------{{{
export GPG_TTY=$(tty)
if [[ -n "$SSH_CONNECTION" ]] ;then
    export PINENTRY_USER_DATA="USE_CURSES=1"
fi
# }}}
# Add tools {{{
if whence direnv &>/dev/null; then
    eval "$(direnv hook zsh)"
fi
# }}}

compinit
promptinit

if [[ "$PROFILE_STARTUP" == true ]]; then
    unsetopt xtrace
    exec 2>&3 3>&-
fi
