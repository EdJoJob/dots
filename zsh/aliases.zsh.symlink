# vim: fdm=marker
# Push and pop directories on directory stack
alias pu='pushd'
alias po='popd'

# Basic directory operations
alias ...='cd ../..'
alias -- -='cd -'

# Originally from robbyrussel/oh-my-zsh/plugins/colored-man-pages.plugin.zsh
function man() {
    env \
        LESS_TERMCAP_mb=$(printf "\e[1;31m") \
        LESS_TERMCAP_md=$(printf "\e[1;31m") \
        LESS_TERMCAP_me=$(printf "\e[0m") \
        LESS_TERMCAP_se=$(printf "\e[0m") \
        LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
        LESS_TERMCAP_ue=$(printf "\e[0m") \
        LESS_TERMCAP_us=$(printf "\e[1;32m") \
        PAGER="${commands[less]:-$PAGER}" \
        _NROFF_U=1 \
        PATH="$HOME/bin:$PATH" \
            man "$@"
}

if [[ $(uname) == 'Darwin' ]]; then
    # version test from https://coderwall.com/p/4yz8dq/determine-os-x-version-from-the-command-line
    version_stamp=$(defaults read loginwindow SystemVersionStampAsString)
    if [[ $version_stamp == '10.14.5' || $version_stamp == '10.14.6' ]]; then
        # from https://apple.stackexchange.com/a/332226/166420
        alias last-successful-logins='\
            log show --style syslog --predicate "process == \"loginwindow\"" --debug --info --last 2h \
            | grep "LUIAuthenticationServiceProvider deactivateWithContext:]_block_invoke" \
            | grep $(date +%Y-%m-%d) \
            | awk "{print $2}" \
            | cut -f 1 -d . '
    elif [[ $version_stamp == '10.15.1' ]]; then
        alias last-successful-logins='\
            log show --style syslog --predicate "process == \"loginwindow\"" --debug --info --last 2h \
            | grep -E "user is active" \
            | awk "{print $2}" \
            | cut -d . -f 1'
    fi
fi


# Show history
alias history='fc -l 1'
# LS TOOLS {{{
if whence gls &>/dev/null; then
    alias ls='gls --color=auto -F --group-directories-first'
else
    alias ls='ls --color=auto -F --group-directories-first'
fi

# List direcory contents
alias lsa='ls -lah'
alias l='ls -lhA'
ldot () { if [[ -n $1 ]]; then; ls -d $1/.*; else; ls -d .*; fi }
#alias ldot='ls -d $PWD/$1/.*' # list all hidden files and dirs
if whence exa &>/dev/null; then
    alias ll='exa --group-directories-first --git --long --group'
    alias tree='ll --tree'
else
    alias ll='ls -lh'
fi
alias la='ls -lha'
alias sl=ls # often screw this up
# }}}
# TOOL REPLACEMENT {{{

if which brew &>/dev/null; then
    brew_loc=$(which brew)
    function brew() {
        $brew_loc $@
        if [[ $1 == install ]] || [[ $1 == uninstall ]]; then
            $brew_loc list > ~/.brewed_recipes
        fi
    }
fi

if which fd &>/dev/null; then
    if which gfind &>/dev/null; then
        alias find=">&2 echo 'Consider using fd'; gfind"
    else
        alias find=">&2 echo 'Consider using fd'; $(which find)"
    fi
else
    if which gfind &>/dev/null; then
        alias find=gfind
    fi
fi

if which ncdu &>/dev/null; then
    alias du=">&2 echo 'Consider using ncdu'; $(which du)"
fi

if which gdate &>/dev/null; then
    alias date=gdate
fi

if which gcal &>/dev/null; then
    alias cal=gcal
fi

if whence hub &>/dev/null; then
    alias g=hub
else
    alias g=git
fi

if whence rg &>/dev/null; then
    alias rg="$(whence rg) --smart-case"
fi

if whence nvim &>/dev/null; then
    alias vi='nvim'
else
    alias vi='vim'
fi
function zz() {
    (cd ~/wiki/zettel && vi +VimwikiIndex\ 2)
}
function zn() {
    (cd ~/wiki/zettel && vi +VimwikiIndex\ 2 +"ZettelNew $@")
}
function zs() {
    (cd ~/wiki/zettel && vi +VimwikiIndex\ 2 +"ZettelOpen $@")
}
# }}}
alias rs="rsync --archive --verbose --address --human-readable --progress"
# QUICK FILE ACCESS {{{
alias .vimrc='vi ~/dots/editor/vimrc.symlink'
alias .local_vimrc='vi ~/.local_vimrc'

alias .zshrc='vi ~/dots/zsh/zshrc.symlink && exec zsh -l'
alias .aliases='vi ~/dots/zsh/aliases.zsh.symlink && exec zsh -l'
alias .local_zsh='vi ~/.local_zshrc && exec zsh -l'

alias .tmux='vi ~/dots/tmux/tmux.conf.symlink && tmux source-file ~/.tmux'
alias .local_tmux='vi ~/.local_tmux.conf'

alias .hg='vi ~/dots/hg/hgrc.symlink'

alias note='vi ~/Dropbox/note.rst'
alias diary='emacsclient -nc ~/Dropbox/org/diary.org &'
# }}}
# VIM MEMORY {{{
alias :vim='vi'
alias :q='exit'
alias :e='vi'
alias :make='make'
alias :h='man'
alias clc='clear'
alias ZQ='exit'
alias ZZ='exit'
# }}}

alias c='clear'
if whence todo-txt &> /dev/null; then
    alias todo.sh=todo-txt
fi
function t() {
    if [[ "$#" -eq 0 ]]; then
        todo.sh list '-(T)'
    else
        todo.sh $@
    fi
}
compdef _todo.sh t

# Git {{{
alias personal_repo="g config user.email 'edjojob@gmail.com'; g config user.name 'EdJoJob'; g config user.signingkey '0xF68AEAEA29DB923E'; g config commit.gpgsign true"
alias dco_repo="g config user.email 'edward.joshua.evans@gmail.com'; g config user.name 'Edward Evans'; g config user.signingkey '0xF68AEAEA29DB923E'; g config commit.gpgsign true"
# }}}

alias anon-ssh="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

alias my_external_ip='dig +short ANY myip.opendns.com @resolver1.opendns.com'
alias my_external_ip4='dig +short A myip.opendns.com @resolver1.opendns.com'
alias my_external_ip6='dig +short AAAA myip.opendns.com @resolver1.opendns.com'

# Chef {{{
alias tk='kitchen' # test kitchen
# }}}
# Docker {{{
alias dm=docker-machine
# }}}
# python debuging with q
alias q='TMPDIR=${TMPDIR:-/tmp} && rm -f $TMPDIR/q && clear && touch $TMPDIR/q && tail -f $TMPDIR/q'

# OSX to Linux Compat {{{
if whence xclip &>/dev/null && ! whence pbcopy &>/dev/null; then
    alias pbcopy='xclip -selection clipboard'
fi
if whence xdg-open &>/dev/null && ! whence open &>/dev/null; then
    open() {
        xdg-open $1 &>/dev/null &
    }
fi
# }}}

# DAY MANAGEMENT {{{
if whence gdate &> /dev/null; then
    alias my_date=gdate
else
    alias my_date=date
fi
start_day() {
    local fortune_dir
    t archive
    t report
    my_date +S%Y-%m-%dT%T >> ~/.start_time
    clear
    t
    t lf later
    if [[ -d ~/Dropbox/fortunes ]]; then
        fortune_dir=~/Dropbox/fortunes
    fi

    if [[ $(uname) == 'Darwin' ]]; then
        fortune $fortune_dir | tee /dev/tty | pbcopy
    elif [[ $(uname) == 'Linux' ]]; then
        fortune $fortune_dir | tee /dev/tty | xclip -selection clipboard
    else
        fortune $fortune_dir
    fi
}

alias end_day='time_since_start_day && my_date +E%Y-%m-%dT%T >> ~/.start_time'
check_start_day() {
    if [[ $(tail -n1 ~/.start_time) == E* ]]; then
        start_day
    fi
}

start_day_time() {
    check_start_day
    tail -n1 ~/.start_time| cut -dT -f 2 | cut -d " " -f 1
}

time_since_start_day() {
    check_start_day
    start_time=`my_date +%s -d $(start_day_time)`
    end_time=`my_date +%s -d $(my_date +%H:%M:%S)`

    diff=$(($end_time - $start_time))
    my_date +%H:%M:%S -ud @${diff}
}
# }}}
# MERCURIAL AIDS {{{
owner() {
    hg annotate -u $1 | cut -f 1 -d ':' | sort | guniq -c | sort -nr | head -n 1 | gsed -re 's/[[:space:]]+/:/g' | cut -f 3 -d ':'
}

next() {
    hg resolve -l | grep '^U' | cut -f 2 -d ' ' | head -n 1
}

last-days-merges() {
    hg slog -r 'date(">yesterday") and merge() and not user("packaging-build7.bb")'
}
# }}}
# ALERT IN OSX {{{
alert() {
    if whence terminal-notifier &> /dev/null; then
        terminal-notifier -remove 'alert'
    fi
    local message exit_status
    message='has finished'
    if [[ -n $TMUX ]]; then
        message="${message} in $(tmux display-message -p '#S-#I:#W')"
    fi
    $@
    exit_status=$?
    if [[ $exit_status -ne 0 ]]; then
        exit_status="\[${exit_status}]"
    else
        exit_status=""
    fi
    if whence terminal-notifier &> /dev/null; then
        terminal-notifier -title "${1}" -subtitle "${exit_status}" -message "${message}" -group 'alert'
    fi
    if which it2attention > /dev/null; then
        it2attention fireworks &
    fi
}

alias alert-clear='terminal-notifier -remove "alert"'
# }}}

lastcommand() {
    fc -l -LI -n '-1' | xargs echo -n | pbcopy
}

if whence http &> /dev/null; then
    alias https='http --default-scheme=https'
fi

if [[ "$(uname -s)" == "Darwin" ]]; then
    sith() {
        val=$(defaults read -g AppleInterfaceStyle 2>/dev/null)
        if [[ $val == "Dark" ]]; then
            export MACOS_MODE="dark"
            export BAT_THEME="Monokai Extended"
        else
            export MACOS_MODE="light"
            export BAT_THEME="Monokai Extended Light"
        fi
    }

    sith
fi


fixssh() {
    for key in SSH_AUTH_SOCK SSH_CONNECTION SSH_CLIENT MACOS_MODE; do
        if (tmux show-environment | grep "^${key}" > /dev/null); then
            value=`tmux show-environment | grep "^${key}" | sed -e "s/^[A-Z_]*=//"`
            export ${key}="${value}"
        fi
    done
}

# FZF {{{
# FindEdit {{{
# fe [FUZZY PATTERN] - Open the selected file with the default editor
#   - Bypass fuzzy finder if there's only one match (--select-1)
#   - Exit if there's no match (--exit-0)
fe() {
  local files
  IFS=$'\n' files=($(fzf-tmux --query="$1" --multi --select-1 --exit-0))
  [[ -n "$files" ]] && ${EDITOR:-vim} "${files[@]}"
}
# }}}
# }}}
# Azure {{{
prepare_az() {
    autoload -U +X bashcompinit && bashcompinit
    source /usr/local/etc/bash_completion.d/az
}
# }}}

# vim:ft=zsh
