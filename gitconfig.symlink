# vi:ft=gitconfig
[color]
    ui = auto
[push]
    default = upstream
[core]
    excludesfile = ~/.gitignore_global
    crlf = input
[include]
    path = ~/.local_gitconfig
[alias]
    blog = !git -C ${GIT_PREFIX:-.} log --graph --date=relative --format=eevans ${GIT_MAINLINE:-master}...HEAD
    bdiff = !git -C ${GIT_PREFIX:-.} diff ${GIT_MAINLINE:-master}...HEAD
    up = !git pull --all --rebase --prune $@ && git submodule sync --recursive && git submodule update --init --recursive
    out = !git fetch && git log origin/${GIT_MAINLINE:-master}..
    in = !git fetch && git log ..origin/${GIT_MAINLINE:-master}

    # Adapted from: https://harrow.io/blog/effortlessly-maintain-a-high-quality-change-log-with-little-known-git-tricks/
    changelog = notes --ref=changelog append
    logchanges = log --pretty='format:%N(%h)%n' --show-notes=changelog
    changelog-init = !git config --add remote.origin.push '+refs/notes/changelog:refs/notes/changelog' && git config --add remote.origin.fetch '+refs/notes/changelog:refs/notes/changelog'

    a = add
    b = branch
    c = commit --verbose
    ci = commit --verbose
    ca = commit --verbose --all
    cm = !git checkout ${GIT_MAINLINE:-master} --ignore-other-worktrees
    co = checkout --ignore-other-worktrees
    d = diff --histogram
    db = !git branch -d $(git branch --merged=${GIT_MAINLINE:-master} | grep -v "\\*" | grep -v "${GIT_MAINLINE:-master}")
    dv = !git diff -w "$@" | view -
    fap = fetch --all --prune
    is-ancestor = "!f() { git merge-base --is-ancestor $1 HEAD }; f"
    lgg = log --graph --decorate
    lgga = log --graph --decorate --all
    glog = log --graph --date=relative --format=eevans
    p = push --prune
    rba = rebase --abort
    rbc = rebase --continue
    rbi = rebase --interactive --autosquash --no-keep-empty
    rbm = !git rebase ${GIT_MAINLINE:-master}
    st = status
    unwip = !git log -n 1 | grep -q -c "\\\\-\\\\-wip\\\\-\\\\-" && git reset HEAD~1
    unpushed = !GIT_CURRENT_BRANCH=$(git name-rev --name-only HEAD) && git log origin/$GIT_CURRENT_BRANCH..$GIT_CURRENT_BRANCH --pretty=eevans
    w = worktree
    wip = "!f() { git add -A && git ls-files --deleted -z | gxargs -r0 git rm && git commit -m \"--wip-- $@\" --no-verify --no-gpg-sign;}; f"

    serve = !git daemon --verbose --export-all --base-path=.git --reuseaddr --strict-paths .git/
[filter "lfs"]
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
[pretty]
    eevans = %C(auto)%h %C(yellow)(%G?) %C(auto)- (%ar) %C(white)%s%C(auto) %C(bold blue)<%an>%C(auto)%d
[mergetool "fugitive"]
    cmd = nvim -c \"Gvdiff!\" \"$MERGED\"
[merge]
    tool = fugitive
    ff = false
[pull]
    ff = true
    rebase = true
[transfer]
    fsckObjects = true
[protocol]
    version = 2
[core]
    pager = delta
[delta]
    line-numbers = true
    side-by-side = true
[interactive]
    diffFilter = delta --color-only
[diff]
    colorMoved = default
